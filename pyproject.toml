[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "docfoundry"
version = "0.1.0"
description = "AI-powered document search and retrieval system"
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]

[tool.black]
line-length = 100
target-version = ["py311"]
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | htmlcov
    | \.pytest_cache
  )/
)
'''

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "htmlcov",
    ".pytest_cache",
    "build",
    "dist"
]

[tool.mypy]
python_version = "3.11"
warn_unused_ignores = true
disallow_untyped_defs = true
strict_optional = true
exclude = [
    "tests/",
    ".venv/",
    "htmlcov/",
    ".pytest_cache/"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --tb=short"
markers = [
    "slow: marks tests as slow (deselect with '-m 'not slow'')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests"
]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "htmlcov", ".pytest_cache"]
skips = ["B101"]  # Skip assert_used test

[tool.coverage.run]
source = ["."] 
omit = [
    "tests/*",
    ".venv/*",
    "htmlcov/*",
    ".pytest_cache/*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]